<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.phone.erp.boss.mapper.sales.MySalesMapper">

<!-- 我的销量公共查询条件 -->
<sql id="mySalesCommonCondition">
				AND T.GROUP_ID = #{groupId}
		  	  <if test="null!=startDate">
		        AND t.BILLS_DATE &gt;= to_date(#{startDate},'YYYY-MM-DD')
		      </if>
		      <if test="null!=endDate">
		        AND t.BILLS_DATE &lt;= to_date(#{endDate},'YYYY-MM-DD')
		      </if>
              <if test="null!=goodsClassId">
				  AND TG.FIRST_GOODS_CATEGORY_ID = #{goodsClassId}
              </if>
              <if test="null!=goodsBrandId">
                 AND TG.GOODS_BRAND_ID =#{goodsBrandId}
              </if>
              <if test="null!=keyWord">
                 AND (
                      UPPER(TS.NAME) LIKE UPPER('%${keyWord}%')OR  
                      UPPER(TS.CODE) LIKE UPPER('%${keyWord}%') 
                      )
              </if>
              <if test="null!=detailKeyWord">
                 AND (UPPER(TGC.NAME) LIKE UPPER('%${detailKeyWord}%')OR 
                      UPPER(TGB.NAME) LIKE UPPER('%${detailKeyWord}%')OR 
                      UPPER(TG.GOODS_MODEL) LIKE UPPER('%${detailKeyWord}%')OR
                      UPPER(TG.NAME) LIKE UPPER('%${detailKeyWord}%')OR 
                      UPPER(TG.REM_CODE) LIKE UPPER('%${detailKeyWord}%')OR  
                      UPPER(TGS.NO) LIKE UPPER('%${detailKeyWord}%') 
                      )
              </if>	                           	
              AND T.COMPANY_ID IN(${companyIds})
              AND T.SECTION_ID IN(${sectionIds})
</sql>

<!-- 公共关联表 -->
<sql id="commonTables">
              JOIN T_COMPANY TC ON T.COMPANY_ID = TC.ID
              JOIN I_STORAGE IST ON T1.STORAGE_ID = IST.ID
              JOIN T_SECTION TS  ON IST.SECTION_ID = TS.ID
              JOIN T_GOODSNAME TG  ON T1.GOODS_ID = TG.ID
              <if test="null!=nodeType">
		         LEFT JOIN T_GOODSALIAS TGS  ON TG.ID = TGS.GOODS_ID AND T.COMPANY_ID=TGS.COMPANY_ID
		         LEFT JOIN T_GOODSCLASS TGC  ON TG.GOODS_CATEGORY_ID =TGC.ID AND TGC.STATUS = 0
		         LEFT JOIN T_GOODSBRAND TGB  ON TG.GOODS_BRAND_ID =TGB.ID              
              </if>
</sql>

<!-- 我的销量主页零售部分代码 -->
<sql id="retail">
		SELECT
  	 		   TS.ID                                     			AS ID,
               TS.CODE                                   			AS CODE,
               TS.NAME                                   		    AS NAME,
               TG.ID												AS GOODSID,
               TG.CODE												AS GOODSCODE,
               TG.NAME												AS GOODSNAME,
               DECODE(TG.IF_MANAGE_IMEI, '0',T1.GOODS_NUMBER,
                  JXC_ALL_PCK.CHECK_DIVIDE(T1.GOODS_NUMBER,ABS(T1.GOODS_NUMBER)))AS GOODSQUANTITY,
               NVL(T1.AMOUNT, 0)			                        AS GOODSAMOUNT,
               NVL(T1.AMOUNT, 0) - NVL(T1.AMTCOST, 0)				AS GOODSPROFITAMOUNT                                       
          FROM I_RETAIL T
              JOIN I_RETAIL_DETAIL T1 ON T1.RETAIL_ID = T.ID AND T1.GROUP_ID=T.GROUP_ID AND T1.COMPANY_ID =T.COMPANY_ID
			<include refid="commonTables"/>
         WHERE T.BILLS_STATUS IN ('6', '7')
           <include refid="mySalesCommonCondition"></include>
</sql>

<!-- 我的销量主页批发部分代码 -->
<sql id="sales">
			SELECT         TS.ID                                              AS ID,
			               TS.CODE                                            AS CODE,
			               TS.NAME                                            AS NAME,
			               TG.ID											  AS GOODSID,
			               TG.CODE										      AS GOODSCODE,
			               TG.NAME											  AS GOODSNAME,			               
			               T1.GOODS_NUMBER                                    AS GOODSQUANTITY, 
			               NVL(T1.DISCOUNTED_AMOUNT,0)                        AS GOODSAMOUNT,
			               NVL(T1.DISCOUNTED_AMOUNT,0) - NVL(T1.COST_PRICE,0) AS GOODSPROFITAMOUNT
			      FROM I_SALES_MAIN T
			        JOIN I_SALES_OUTSTRORAGE_NUM T1 ON T.ID=T1.BILLS_MAIN_ID
					<include refid="commonTables"/>
			   WHERE  T.BILLS_TYPE IN ('19','20')
			      <include refid="mySalesCommonCondition"></include>
			 UNION ALL 
			SELECT         TS.ID                                                 AS ID,
			               TS.CODE                                               AS CODE,
			               TS.NAME                                               AS NAME,
			               TG.ID											     AS GOODSID,
			               TG.CODE										         AS GOODSCODE,
			               TG.NAME											  	 AS GOODSNAME,				               
			               -T1.GOODS_NUMBER                                      AS GOODSQUANTITY, 
			               -NVL(T1.DISCOUNTED_AMOUNT,0)                          AS GOODSAMOUNT,
			               -(NVL(T1.DISCOUNTED_AMOUNT,0) - NVL(T1.COST_PRICE,0)) AS GOODSPROFITAMOUNT
			      FROM I_SALES_MAIN T
			        JOIN I_SALES_INSTRORAGE_NUM T1 ON T.ID=T1.BILLS_MAIN_ID
					<include refid="commonTables"/>
			      WHERE  T.BILLS_TYPE IN ('21','20')
			      <include refid="mySalesCommonCondition"></include>
</sql>

<!-- 我的销量主页核心代码sql片段 -->
<sql id="codeSqlAndQueryCondition">
		<if test="NULL==salesType">
			<include refid="retail"/>
			UNION ALL
			<include refid="sales"/>
		</if>
		<if test="salesType==1"><include refid="retail"/></if>
		<if test="salesType==2"><include refid="sales"/></if>
</sql>

<!-- 我的销量主页分页集合 -->
<select id="getPageData" resultType="com.phone.erp.boss.vo.sales.MySalesVo">
	SELECT ID,
	       CODE,
	       NAME,
	       'Section' NODETYPE,
	       GOODSQUANTITY,
	       TO_CHAR(GOODSAMOUNT)GOODSAMOUNT
	       <if test="canSeeAmount==1">  ,
	       TO_CHAR(GOODSPROFITAMOUNT)GOODSPROFITAMOUNT,
	       TO_CHAR(ROUND(JXC_ALL_PCK.CHECK_DIVIDE(GOODSPROFITAMOUNT, ABS(GOODSQUANTITY)),2)) GOODSAVGPROFITAMOUNT
	       </if>
	  FROM (
		     SELECT ID,CODE,NAME,
		     SUM(GOODSQUANTITY)GOODSQUANTITY,
		     ROUND(SUM(GOODSAMOUNT),2)GOODSAMOUNT,
		     ROUND(SUM(GOODSPROFITAMOUNT),2)GOODSPROFITAMOUNT
		     FROM(
					<include refid="codeSqlAndQueryCondition"/>
				)
		         GROUP BY ID,CODE,NAME
		         ORDER BY ID,CODE,NAME
		)
</select>

<!-- 我的销量主页公司总计行对象 -->
<select id="getTotalVo" resultType="com.phone.erp.boss.vo.sales.MySalesVo">
	SELECT 
	       'Company' NODETYPE,
	       GOODSQUANTITY,
	       TO_CHAR(GOODSAMOUNT)GOODSAMOUNT
	       <if test="canSeeAmount==1">  ,
	       TO_CHAR(GOODSPROFITAMOUNT)GOODSPROFITAMOUNT,
	       TO_CHAR(ROUND(JXC_ALL_PCK.CHECK_DIVIDE(GOODSPROFITAMOUNT, ABS(GOODSQUANTITY)),2)) GOODSAVGPROFITAMOUNT
	       </if>
	  FROM (SELECT
		     SUM(GOODSQUANTITY)GOODSQUANTITY,
		     ROUND(SUM(GOODSAMOUNT),2)GOODSAMOUNT,
		     ROUND(SUM(GOODSPROFITAMOUNT),2)GOODSPROFITAMOUNT
		     FROM(
					<include refid="codeSqlAndQueryCondition"/>
				)
			)
</select>

<!-- 我的销量详情页页分页集合 -->
<select id="getDetailPageData" resultType="com.phone.erp.boss.vo.sales.MySalesVo">
	SELECT ID,CODE,NAME,GOODSQUANTITY,
	       TO_CHAR(GOODSAMOUNT)GOODSAMOUNT
	       <if test="canSeeAmount==1">  ,
	       TO_CHAR(GOODSPROFITAMOUNT)GOODSPROFITAMOUNT,
	       TO_CHAR(ROUND(JXC_ALL_PCK.CHECK_DIVIDE(GOODSPROFITAMOUNT, ABS(GOODSQUANTITY)),2)) GOODSAVGPROFITAMOUNT
	       </if>
	  FROM (
		     SELECT GOODSID AS ID,GOODSCODE AS CODE,GOODSNAME AS NAME,
		     SUM(GOODSQUANTITY)GOODSQUANTITY,
		     ROUND(SUM(GOODSAMOUNT),2)GOODSAMOUNT,
		     ROUND(SUM(GOODSPROFITAMOUNT),2)GOODSPROFITAMOUNT
		     FROM(
					<include refid="codeSqlAndQueryCondition"/>
				)
		         GROUP BY GOODSID,GOODSCODE,GOODSNAME
		         ORDER BY GOODSID,GOODSCODE,GOODSNAME
		)
</select>

<!-- 我的销量详情页总计对象 -->
<select id="getDetailTotalVo" resultType="com.phone.erp.boss.vo.sales.MySalesVo">
	SELECT <if test="nodeType==Section">ID,CODE,NAME,</if>
	       GOODSQUANTITY,
	       TO_CHAR(GOODSAMOUNT)GOODSAMOUNT
	       <if test="canSeeAmount==1">  ,
	       TO_CHAR(GOODSPROFITAMOUNT)GOODSPROFITAMOUNT,
	       TO_CHAR(ROUND(JXC_ALL_PCK.CHECK_DIVIDE(GOODSPROFITAMOUNT, ABS(GOODSQUANTITY)),2)) GOODSAVGPROFITAMOUNT
	       </if>
	  FROM (SELECT<if test="nodeType==Section">ID,CODE,NAME,</if>
		     SUM(GOODSQUANTITY)GOODSQUANTITY,
		     ROUND(SUM(GOODSAMOUNT),2)GOODSAMOUNT,
		     ROUND(SUM(GOODSPROFITAMOUNT),2)GOODSPROFITAMOUNT
		     FROM(
					<include refid="codeSqlAndQueryCondition"/>
				)
				<if test="nodeType==Section">
			         GROUP BY ID,CODE,NAME
			         ORDER BY ID,CODE,NAME				
				</if>
			)
</select>
</mapper>
